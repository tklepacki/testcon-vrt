"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.bufferDtoToFormData = exports.multipartDtoToFormData = void 0;
const form_data_1 = __importDefault(require("form-data"));
const fs_1 = __importDefault(require("fs"));
const multipartDtoToFormData = (dto) => {
    const data = new form_data_1.default();
    data.append("buildId", dto.buildId);
    data.append("projectId", dto.projectId);
    data.append("branchName", dto.branchName);
    dto.baselineBranchName && data.append("baselineBranchName", dto.baselineBranchName);
    data.append("name", dto.name);
    data.append("image", fs_1.default.createReadStream(dto.imagePath), {
        knownLength: fs_1.default.statSync(dto.imagePath).size,
    });
    dto.os && data.append("os", dto.os);
    dto.browser && data.append("browser", dto.browser);
    dto.viewport && data.append("viewport", dto.viewport);
    dto.device && data.append("device", dto.device);
    dto.customTags && data.append("customTags", dto.customTags);
    dto.ignoreAreas &&
        data.append("ignoreAreas", JSON.stringify(dto.ignoreAreas));
    dto.diffTollerancePercent &&
        data.append("diffTollerancePercent", dto.diffTollerancePercent);
    dto.comment && data.append("comment", dto.comment);
    return data;
};
exports.multipartDtoToFormData = multipartDtoToFormData;
const bufferDtoToFormData = (dto) => {
    const data = new form_data_1.default();
    data.append("buildId", dto.buildId);
    data.append("projectId", dto.projectId);
    data.append("branchName", dto.branchName);
    dto.baselineBranchName && data.append("baselineBranchName", dto.baselineBranchName);
    data.append("name", dto.name);
    data.append("image", dto.imageBuffer, { filename: "image.png" });
    dto.os && data.append("os", dto.os);
    dto.browser && data.append("browser", dto.browser);
    dto.viewport && data.append("viewport", dto.viewport);
    dto.device && data.append("device", dto.device);
    dto.customTags && data.append("customTags", dto.customTags);
    dto.ignoreAreas &&
        data.append("ignoreAreas", JSON.stringify(dto.ignoreAreas));
    dto.diffTollerancePercent &&
        data.append("diffTollerancePercent", dto.diffTollerancePercent);
    dto.comment && data.append("comment", dto.comment);
    return data;
};
exports.bufferDtoToFormData = bufferDtoToFormData;
